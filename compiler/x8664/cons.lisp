(in-package :clcomp)

(define-vop cons (res :register) ((arg1 :register) (arg2 :register))
  (inst :mov res (@ *heap-header-reg*))
  (inst :lea res (@ res nil nil (* 2 *word-size*)))
  (inst :mov (@ *heap-header-reg*) res)
  (inst :lea res (@ res nil nil (- (* 2 *word-size*))))
  (inst :mov (@ res) arg1)
  (inst :mov (@ res nil nil 8) arg2)
  (inst :add res *list-tag*))

(define-vop car (res :register) ((arg1 :register))
  (inst :lea res (@ arg1 nil nil (- *list-tag*)))
  (inst :test res *mask*)
  (inst :jump-fixup :jnbe :not-cons)
  (inst :mov res (@ res))
  (inst :label :not-cons)
  (inst :mov res *nil*))

(define-vop cdr (res :register) ((arg1 :register))
  (inst :lea res (@ arg1 nil nil (- *list-tag*)))
  (inst :test res *mask*)
  (inst :jump-fixup :jnbe :not-cons)
  (inst :mov res (@ res nil nil *word-size*))
  (inst :label :not-cons)
  (inst :mov res *nil*))
