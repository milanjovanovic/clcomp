(in-package :clcomp)

(define-vop allocate-array (res :register) ((arg :register))
  (inst :mov *tmp-reg* (@ *heap-header-reg*))
  (inst :mov res *tmp-reg*)
  (inst :shr arg *tag-size*)
  (inst :lea *tmp-reg* (@ *tmp-reg* arg *word-size* (* *word-size* *array-header-size*)))
  (inst :mov (@ *heap-header-reg*) *tmp-reg*)
  (inst :mov (@ res nil nil nil) *simple-array-tag*)
  (inst :shl arg *tag-size*)
  (inst :mov (@ res nil nil *word-size*) arg)
  (inst :lea *tmp-reg* (@ res nil nil (* 2 *word-size*)))
  (inst :mov (@ res nil nil (* 2 *word-size*)) *tmp-reg*)
  (inst :add res *pointer-tag*))

(define-vop aref (res :register) ((array :register)
				  (index :register))
  (inst :lea array (@ array nil nil (- *pointer-tag*)))
  (inst :mov res (@ array index *word-size* (* 3 *word-size*))))

(define-vop setf-aref (res :register) ((array :register)
				       (index :register)
				       (value :register))
  (inst :lea array (@ array nil nil (- *pointer-tag*)))
  (inst :mov (@ array index *word-size* (* 3 *word-size*)) value)
  (inst :mov res value))
