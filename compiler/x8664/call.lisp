(in-package :clcomp)

#+nil(defun listify-arguments (args-count)
  (let* ((collect-registers (nthcdr args-count *fun-arguments-regs*))
	 (result-offset (+ 1 args-count))
	 (maybe-result-register (first collect-registers)))
    ;; traverse arguments from last to first 
    (dolist (reg collect-registers)
      (inst ))))


(define-vop from-lisp-test (res :register) ()
  (inst :mov :RAX 33561728)
  (dolist (reg *c-call-save-registers*)
    (unless (eq reg res)
      (inst :push reg)))
  (inst :push :rbp)
  (inst :mov :rbp :rsp)
  (inst :call :rax)
  ;; (inst :push :R15)
  ;; (inst :push :RBP)
  ;; (inst :mov :RSP :RBP)
  ;; (inst :call :RAX)
  ;; (inst :pop :RBP)
  ;; (inst :pop :R15)
  (inst :mov res :RAX)
  (inst :pop :rbp)
  (dolist (reg (reverse *c-call-save-registers*))
    (unless (eq reg res)
      (inst :pop reg))))


#+nil
 (define-vop foo (res :register) ((arg :register))
   (when (not (eq arg :RDI))
     (inst :mov :RDI arg))
   (inst :mov :RAX 33561792)
   (inst :push :R15)
   (inst :sub :RSP 8)
   (inst :call :RAX)
   (inst :add :RSP 8)
   (inst :pop :R15)
   (inst :mov :RBX :RAX))
